cmake_minimum_required(VERSION 3.12)
project(CountDistCPP)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
# Version
set(CountDistCPP_VERSION_MAJOR 3)
set(CountDistCPP_VERSION_MINOR 1)
# Compiler flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -g")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -lm")
set(PYBIND11_CPP_STANDARD -std=c++1z)

file(MAKE_DIRECTORY ${CountDistCPP_SOURCE_DIR}/build)
file(MAKE_DIRECTORY ${CountDistCPP_SOURCE_DIR}/build/bin)
set(RUNTIME_OUTPUT_DIRECTORY ${CountDistCPP_SOURCE_DIR}/build)

if (DEFINED ENV{OMP})
    set(omp_default $ENV{OMP})
else ()
    set(omp_default 0)
endif ()
set(omp ${omp_default} CACHE STRING "Number of threads for OpenMP")
add_definitions(-Domp_num_threads=${omp})

if (DEFINED ENV{VERS})
    set(vers_default $ENV{VERS})
else ()
    set(vers_default 4)
endif ()
set(vers ${vers_default} CACHE STRING "Version of code to compile")

if (omp GREATER 0)
    find_package(OpenMP)
    if (NOT OpenMP_CXX_FOUND)
        set(omp 0)
    endif ()
endif ()
message(STATUS "omp = " ${omp})
message(STATUS "version = " ${vers})
message(STATUS "CMAKE_CXX_STANDARD: " ${CMAKE_CXX_STANDARD})
message(STATUS "CMAKE_CXX_FLAGS: " ${CMAKE_CXX_FLAGS})
message(STATUS "CMAKE_EXE_LINKER_FLAGS: " ${CMAKE_EXE_LINKER_FLAGS})

enable_testing()

#find_package(pybind11 REQUIRED)
add_subdirectory(pybind11)
set(PB_SOURCE_DIR "src/v${vers}")
set(PB_SOURCES "${PB_SOURCE_DIR}/calc_distances.cpp")
include_directories("${CountDistCPP_SOURCE_DIR}/include/v${vers}")
pybind11_add_module(calculate_distances SHARED ${PB_SOURCES} "${PB_SOURCE_DIR}/bind_calc_distances.cpp")
if (OpenMP_CXX_FOUND)
    target_link_libraries(calculate_distances PUBLIC OpenMP::OpenMP_CXX)
endif ()
#target_include_directories(calculate_distances PUBLIC "${CountDistCPP_SOURCE_DIR}/include/v${vers}")
#add_subdirectory(src)
set(TEST_NAME "${PROJECT_NAME}_test")
set(TEST_DIR "tests")
file(GLOB TEST_FILES "${TEST_DIR}/test_*.cpp")
set(TESTS ${PB_SOURCES} ${TEST_FILES})
add_executable(${TEST_NAME} ${TESTS})
#target_include_directories(${TEST_NAME} PUBLIC "${TEST_DIR}/external")
